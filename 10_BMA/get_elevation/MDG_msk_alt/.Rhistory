installed.packages("devtools")
install.packages("devtools")
library(devtools)
install_github("gehara/PipeMaster")
library(PipeMaster)
x<-main.menu()
sim.snp.sumstat(x)
Sys.info()
Sys.info()[1]
Sys.info()
install_github("gehara/PipeMaster")
library(PipeMaster)
sim.snp.sumstat(x)
find.package(PipeMaster)
find.package("PipeMaster")
install_github("gehara/PipeMaster")
library(PipeMaster)
change.permission()
install_github("gehara/PipeMaster")
install_github("gehara/PipeMaster")
library(PipeMaster)
change.permission()
sim.snp.sumstat(x)
library(EEMS)
library(rEEMSplots)
library(rEEMSplots2)
library(rEEMSplots)
library(rEEMSplots)
install.packages("ggtree")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("ggtree", version = "devel")
browseVignettes("ggtree")
library(ggtree)
source("https://bioconductor.org/biocLite.R")
biocLite("ggtree")
library(ggtree)
browseVignettes("ggtree")
install.packages(treeio)
install.packages("treeio")
install.packages("treeio")
source("https://bioconductor.org/biocLite.R")
biocLite("treeio")
library(treeio)
nwk <- system.file("extdata", "sample.nwk", package="treeio")
tree <- read.tree(nwk)
str(tree)
plot(tree)
ggplot(tree, aes(x, y)) + geom_tree() + theme_tree()
library(ggplot2)
ggplot(tree, aes(x, y)) + geom_tree() + theme_tree()
library(ggplot)
install.packages("ggplot")
ggplot(tree, aes(x, y)) + geom_tree() + theme_tree())
ggplot(tree, aes(x, y))
ggtree(tree, ladderize=FALSE)
g
library(ggtree)
tree <- read.tree(nwk)
ggplot(tree, aes(x, y)) + geom_tree() + theme_tree()
tree2<-rtree(20)
plot(tree2)
ggplot(tree2, aes(x, y)) + geom_tree() + theme_tree()
d1 <- data.frame(id=tr$tip.label, val=rnorm(30, sd=3))
d1 <- data.frame(id=tree$tip.label, val=rnorm(30, sd=3))
str(tree)
d1 <- data.frame(id=tree$tip.label, val=rnorm(12, sd=3))
d1 <- data.frame(id=tree$tip.label, val=rnorm(13, sd=3))
head(d1)
plot(tree)
getwd()
read.csv("Users/herpworld/Desktop/jupyter_tests/school_earnings.csv")
read.csv("/Users/herpworld/Desktop/jupyter_tests/")
read.csv("/Users/herpworld/Desktop/jupyter_tests")
read.csv("/Users/herpworld/Desktop/jupyter_tests", header=T)
x<-read.csv("/Users/herpworld/Desktop/jupyter_tests", header=T)
x<-read.csv("/Users/herpworld/Desktop/jupyter_tests/jupyter_points.csv", header=T)
#Load necessary libraries
library(raster)
library(rworldmap)
library(rgdal)
library(maps)
library(plotrix)
library(sp)
library(ade4)
library(rgeos)
library(spatialEco)
library(elevatr)
#load raster with altitude and crop to extent
setwd("/Users/herpworld/Dropbox/final_second_submis_docs/dryad_files/10_BMA/get_elevation")
alt=raster("alt.bil")
ext_user=extent(c(41,55,-26,-10))
alt=raster("alt.bil")
plot(getMap(), xlim = c(46,50), ylim = c(-25,-10), asp=1)
# check that points plot onto alt map sensibly.
DataSpecies=read.csv<-read.csv("mg_species.csv")
points(DataSpecies[ , 2:3], cex = 0.7, pch = 16, col = "dodgerblue")
setwd("MDG_msk_alt")
setwd("/MDG_msk_alt")
getwd()
list.files
list.files()
list.files()
setwd("MDG_msk_alt")
list.files()
GDALinfo("MDG_msk_alt.grd")
alt=raster("MDG_msk_alt.grd")
ext_user=extent(c(41,55,-26,-10))
alt.mg=crop(alt,ext_user)
#alt.mg is large, will take time to load,or you can just plot the extent with getMap()
plot(alt.mg)
# check that points plot onto alt map sensibly.
DataSpecies=read.csv<-read.csv("mg_species.csv")
points(DataSpecies[ , 2:3], cex = 0.7, pch = 16, col = "dodgerblue")
